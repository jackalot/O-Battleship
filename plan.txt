Focus, make a file called updateDOMBoard that update the DOM board for us:
- the function name will be updateDOMBoard().
- its input paramaters will be = 
{
myPlayer, queryString
}


- a function inside called applyEvent() {
    - its paramaters will be  ={
        * element
        * function
    }
    - inside the function, it will apply an event listener to the element
    and when the element is clicked, function will be called.
}
- a function inside called removeEvent() {
    - its paramaters will be = {
        * element
        * function
    }
    - inside the function, it will removeEvent an event listener from the element
    and when the element is clicked, function will be called.
}
- a function insde called searchShip() {
    -searchShip will have the parameter coordinate
    -searchShip will then have a variable named result
    which equals to myPlayer and will access myPlayer.ourBoard and use
    the board.js function 'findFirstShip'
    -it will then return the result;
}
- a function inside called searchMiss() {
    -searchMiss will have the parameter coordinate
    - searchMiss will then have a variable named result
    which equals to myPlayer and will access myPlayer.ourBoard and use
    the board.js function 'checkMissesAndHits'
    -it will then check if result is 'Miss'
        {
            - if so, return true
        }
    - if not return false
}
- a function inside called searchHit() {
    -searchHit will have the parameter coordinate
    -searchMiss will then have a variable named result
    which equals to myPlayer and will access myPlayer.ourBoard and use
    the board.js function 'checkMissesAndHits'
    -it will then check if result is 'Hit'
        {
            - if so, return true
        }
    - if not return false
}
//  findInRow() helperFunction 
- a function inside called checkBox() {
    - its paramaters will be = {
        * coordinate
        * temporaryBox
    }
    - first it will check if the coordinate given is a Hit using searchHit
    {
       - if it is, then apply the "hit" class to the box.
    }
    - else check if the coordinate given is a Miss using searchMiss
    {
        -if it is, then apply the "miss" class to the box.
    }
    - else check if the coordinate given is a Ship using searchShip
    {
        -if it is, then apply the "containsShip" class to the box.
    }
}
- a function inside called findInRow() {
    - its parameters will be = {
        * collumn
    }
    - a for loop of i < 10 goes
    {
        - it will then do a query selector using queryString + collumn + i
    }
}
- a function inside called sendNextCollumn () {
//  this funcions main purpose is to send a collumn to findInRow();
    - a for loop with i < 10 occurs
    {
        - on each loop, it calls findInRow and sends i as the collumn
        - it sends findInRow with each searchFunction so:
        findInRow(i, searchHit)
        findInRow(i, searchMiss)
        etc.
    }
}
- export updateDOMBoard


psuedo code: 
function updateDOMBoard(myPlayer, searchQuery)
{
    //  Allows you to apply any click EventListener to any function
    function applyClickEvent(element, function) {
        element.addEventListener('click', function);
    }
    //  Allows you to remove any Click EventListener from any element
    function removeClickEvent(element, function) {
        element.removeEventListener('click', function);
    }
    function searchShip(coordinate) {
        const result = myPlayer.ourBoard.findFirstShip(coordinate);
        return result;
    }
    function searchMiss(coordinate) {
        const result = myPlayer.ourBoard.checkMissesAndHits(coordinate);
        if(result === 'Miss')
        {
            return true;
        }
        return false;
    }
    function searchHit(coordinate) {
        const result = myPlayer.ourBoard.checkMissesAndHits(coordinate);
        if(result === 'Hit')
        {
            return true;
        }
        return false;
    }
    function findInRow(row, collumn)
    {
        for(let i = 1; i < 10; i += 1)
        {
            const currentBox = document.querySelector(`${queryString}-${collumn}-${i}`);
        }
    }
    function sendNextCollumn()
    {
        //  this funcions main purpose is to send a collumn to findInRow();
        for(let i = 0; i < 10; i += 1)
        {
            findInRow(i, searchHit)
            findInRow(i, searchMiss)
            findInRow(i, searchShip)
        }
    }
}
module.exports = updateDOMBoard;