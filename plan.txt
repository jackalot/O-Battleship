Focus: start the game after ships are placed and the lone player presses startGame:
// the cpu has all of its ship layouts now, the start button calls getAShipLayout()
// thanks to askPlayerCount() having an event listener in that function.
+ import the attackDomManager
+ inside dropShip.js, a new function called startGame() {
    + call hideButton() on the following classes: "confirm-place-ships", "start", "Pass-Turn"
    + call displayButton on the following classes: "confirmAttackBtn"
    + call clear board with the value false
    + create instances of both players updateDomBoards, player 2 will have theirs hidden
    + update both player's boards
    + create an instance of the attackDomManager();
    + query select the confirmAttackBtn
    + add an event listener (() => {
        + add the attackDomManager.findUnconfirmedAttacks() function to confirmAttackBtn
    })
}
psuedo code:
 function startGame() {
     // hide the buttons we won't use in the game
     hideButton("confirm-place-ships");
     hideButton("start");
     hideButton("Pass-Turn");
     // display the buttosn we will use in the game
     displayButton("confirmAttackBtn");
     // clear any ability to place down ships
     clearBoards(false);
     // get each players update dom board instances
     const p1DomBoardManager = domBoardFile(ourPlayers.playerOne, 'P1Box', ourPlayers.playerTwo, true);
    const p2DomBoardManager = domBoardFile(ourPlayers.playerTwo, 'P2Box', ourPlayers.playerOne, false);
    // update both player's board's to be ready for playing
    p1DomBoardManager.sendNextCollumn();
    p2DomBoardManager.sendNextCollumn();
    const attackManager = attackDomFile(playerOne, playerTwo, p1DomBoardManager, p2DomBoardManager);
    const confirmAttackBtn = document.querySelector('.confirmAttackBtn');
    confirmAttackBtn.addEventListener('click', (() => {

    }))
 }