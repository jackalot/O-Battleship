Focus: adding a button that submits the attack onto the board:
* in attackDomManager
{
- inside attackDomManager, a function called findUnconfirmedAttacks() {
  // this will find the unconfirmed attack and it will get the coordinates from that unconfirmed attack
  - query select a class with the name unconfirmedAttack
  - find the box that was found and store its id
  - store the 1 or 2 in the boxes id in where it says "P1Box" or "P2Box" as a variable
  - store the seperate coordinates from the boxes id where it says "-3-5" as two seperate variables
  - the above two variables will be strings, so then make them integers using parseInt
  - after the seperate coordinates have been parsed, store them into one coordinate object
  - if box id is a 1
  {
    -call recieveAttack with the coordinates and the defending player is player One,
    also send the box we query selected
  }
  else, if the player is a 2
  {
    -call recieveAttack with the coordinates and the defending player is player two,
    also send the box we query selected
  }
}
// most of this is basically updateDomBoard's recieveAttack function
- in recieveAttack()
  {
    - parameters { coordinate, defendingPlayer, domBox}
    - first, store a reference to [ a function we need to plan out inside attackDomManager]
    - then store a reference to the defendingPlayer, their board, and their recieveAttack function
    - if the result of the defendingPlayer's recieveAttack function resulted in a hit, 
    {
      - domBox will have the class name unconfirmedAttack removed
      - domBox will have the class name hit added
    }
    - else, if it resulted in a miss, 
    {

    }
  }
}
psuedo code:
function findUnconfirmedAttacks() {
  const attackBox = document.querySelector('.unconfirmedAttack');
  const playerString = attackBox.id[1];
  const xString = attackBox.id[6];
  const yString = attackBox.id[8];
  const playerInt = parseInt(playerString);
  const xInt = parseInt(xString);
  const yInt = parseInt(yString);
  const coordinate = { x: xInt, y: yInt};
  if(playerInt === 1)
  {
    recieveAttack(coordinate, playerOne);
  }
  else if(playerInt === 2)
  {
    recieveAttack(coordinate, playerTwo);
  }
}
function recieveAttack(coordinate, defendingPlayer) {
const result = defendingPlayer.ourBoard.recieveAttack(coordinate);
console.log(result);
}