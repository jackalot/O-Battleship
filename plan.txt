Focus: after the ships are placed, make the cpu get a random assortment of coordinates:
* inside dropship.js
+ inside dropship, a new function called fillCPUShips() {
  + parameters { shipArray }
  + a for loop that loops through the shipArray {
    + on each loop iteration, shipArray's coord1 and coord 2 will be placed on ourPlayers.playerTwo.ourBoard.placeShip()
  }
}
+ inside dropship, a new function called getAShipLayout () {
  + make 5 arrays that the cpu could use, here is how the general look will be:
  1.[{ coord1: {x: 1, y: 1}, coord2: {x: 3, y: 3}},]
  + after the arrays, choose a random number between 1 and 5 and store the result
  + several if statements that check if the result was their corresponding number,
  ie. if it was 1{
    + depending which number it is, send the corresponding array to 
    fillCPUShips()
  }
}
psuedo code:
  const domBoardFile = require('./updateDOMBoard');
  function getAShipLayout() {
    
  }
  function confirmPlacedShips() {
    const allUnconfirmedShips = findUnconfirmedShips();
    const unconfirmedCoordinates = getShipCoordinates(allUnconfirmedShips);
    const shipObject = createShipObject(unconfirmedCoordinates);
    if(playerCount === 1)
    {
      ourPlayers.playerOne.ourBoard.placeShip(shipObject.startPoint, shipObject.endPoint);
      revealBoard(ourPlayers.playerOne, ourPlayers.playerTwo);
    }
  }