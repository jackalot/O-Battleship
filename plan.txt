Focus: allowing players to place their own ships:
+ inside dropShip, a new function called placeAShip() {
  + parameters{ myPlayerNumber}

}
+ inside dropShip, a new function called addToEachBox() {
  parameters{ playerCount }
  + first it will query select every box
  + then it will call a forEach loop
  {
    + it will then call findPlayerNumber and the value it sends it is the boxes id
    + then an event listener will be added to the box, the function will be
    placeAShip with findPlayerNumber's result as the 'myPlayerNumber'
  }
}
+ in the clearBoard function() {
  + after the board is cleared call addToEachBox and call it with the playerCount
  }
psuedo code:
function dropShip() {
  function placeAShip(myPlayerNumber) {

}
  // addToEachBox() helper function
  // finds the player number in the id
  function findPlayerNumber(nonSeperatedId) {
    const numberAsAString = nonSeperatedId[1];
    if (numberAsAString === '1') {
      return 1;
    } if (numberAsAString === '2') {
      return 2;
    }
    return false;
  }
  function addToEachBox() {
    const allBoxes = document.querySelectorAll('.box');
    allBoxes.forEach((box) => {
      const result = findPlayerNumber(box.id);
      box.addEventLisener('click', () => {
        placeAShip(result);
      })
    })
  }
  function clearBoards(playerCount) {
    if (playerCount === 1) {
      const allBoxes = document.querySelectorAll('.box');
      allBoxes.forEach((box) => {
        //  This will clone the box with itself, thus removing every event listener
        box.replaceWith(box.cloneNode(true));
      });
    }
    addToEachBox(playerCount);
  }
  function askPlayerCount() {
    const windowResult = Number(window.prompt('How many players will be playing? For one player, please type 1, for two players, please type 2', ''));
    // eslint-disable-next-line radix
    const result = parseInt(windowResult);
    if (result === 1) {
      clearBoards(1);
    }
  }
  return { askPlayerCount };
}
module.exports = dropShip;
