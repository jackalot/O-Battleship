Focus: make the cpu be able to attack corresponding grid items when a hit is found:
* inside player.js
  + inside player.js, a new function called checkEachHitsFound() {
    + parameters { hitsFound, playerAttacking}
  }
  + inside sendRandomAttack() {
    + check if hitsFound has a length greater than 0, this means that there was a hit
    {
    }
}
psuedo code:
 function tryEveryDirection(hitsFound, playerAttacking) {
   const possibleCoordinates = [];
   //                     right           up              down          left
   const allDirections = [{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: -1}, {x: -1, y: 0}];
   for(let i = 0; i < allDirections; i += 1)
   {
     const slot = findAdjacentSlot(hitsFound[0].ourCoordinates,
      allDirections[i],
       playerAttacking);
       if(slot !== hitsFound[0].ourCoordinates)
       {
         possibleCoordinates.push(slot);
       }
   }
   return possibleCoordinates;
 }
 function sendRandomAttack(playerAttacking) {
    const hitsFound = findHits(playerAttacking);
    console.log(hitsFound);
    // if ships were hit, then try to find adjoining coordinates to that coordinates
    // in case it's a ship
    if (hitsFound.length > 0) {
      const directions = tryEveryDirection(hitsFound, playerAttacking);
    }
    // if no ships were harmed, fire a random attack at any coordinate
    if (hitsFound.length === 0) {
      const coordinate = createRandomCoordinate(playerAttacking);
      sendAttack(playerAttacking, coordinate);
      return true;
    }
    return false;
  }
