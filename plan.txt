Focus: make the cpu be able to attack corresponding grid items when a hit is found:
* inside player.js
{
  // sendRandomAttack helper function
  // this will try every direction a slot has neighboring it (not diagnal)
  // then return the possible ones
  + inside player.js, a new function, tryEveryDirection() {
    + parameters { hitsFound, playerAttacking}
    + start the function with an array called possibleCoordinates, this will be empty
    + make an array called allDirections, this will go every direction the findAdjacentSlot function can take
    + make a for loop that goes through allDirections {
      + call the findAdjacentSlot function, with the following arguments:
        hitsFound[0].ourCoordinates
        allDirections[this iteration]
        playerAttacking
      
    }
  }
  + inside sendRandomAttack() {
    + check if hitsFound has a length greater than 0, this means that there was a hit
    {
    }
}
psuedo code:
 function sendRandomAttack(playerAttacking) {
    const hitsFound = findHits(playerAttacking);
    console.log(hitsFound);
    // if ships were hit, then try to find adjoining coordinates to that coordinates
    // in case it's a ship
    if (hitsFound.length > 0) {
      const newSlot = findAdjacentSlot(hitsFound[0].ourCoordinates, {x: 1, y: 0}, playerAttacking);
    }
    // if no ships were harmed, fire a random attack at any coordinate
    if (hitsFound.length === 0) {
      const coordinate = createRandomCoordinate(playerAttacking);
      sendAttack(playerAttacking, coordinate);
      return true;
    }
    return false;
  }
