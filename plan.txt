Focus: Stop the player from attacking if its not their turn:
* in updateDomBoard.js
- in unconfirmedAttack (){
 - before any other previous attacks are queryselected, check if myPlayer.playerTurn equals 0
 {
     - then continue the function.
 }
}
* in attackDomManager.js
- in swapVisibility()
{
    - if defendingPlayer is equal to player1 {
        -call the player1.swapTurn() function
        -call the player2.swapTurn() function
    }
    - if defendingPlayer is equal to player2 {
        -call the player2.swapTurn() function
        -call the player1.swapTurn() function
    }
}
psuedo code:
/// updateDomBoard.js \\\
 function unconfirmedAttack(temporaryBox) {
    // in the case this function is called more than once, get all cases of the class
    const anyPreviousAttacks = document.querySelectorAll('.unconfirmedAttack');
    // if there isn't any, move on
    if (anyPreviousAttacks.length === 0) {
      console.log(temporaryBox);
      temporaryBox.classList.add('unconfirmedAttack');
      const gameStatus = document.querySelector('.gameStatus');
      gameStatus.textContent = `${otherPlayer.playerName}, please confirm attack`;
    } else { // remove the last unconfirmed attacks, then continue out
      anyPreviousAttacks.forEach((element) => {
        element.classList.remove('unconfirmedAttack');
      });
      temporaryBox.classList.add('unconfirmedAttack');
      const gameStatus = document.querySelector('.gameStatus');
      gameStatus.textContent = `${otherPlayer.playerName}, please confirm attack`;
    }
  }
/// attackDomManager.js \\\